import mongoose from"mongoose";import jwt from"jwt";import bcrypt from"bcrypt";const userSchema=new mongoose.monSchema({username:{type:String,required:!0,unique:!0,lowercase:!0,trim:!0,index:!0},email:{type:String,required:!0,unique:!0,lowercase:!0,trim:!0},password:{type:String,required:!0},fullname:{type:String,required:!0,trim:!0,index:!0},avatar:{type:String,required:!0},coverimage:{type:String},watchhistory:[{type:mongoose.Schema.Types.ObjectId,ref:"Video"}],password:{type:String,required:[!0,"Password is required"]},refreshToken:{type:String}},{timestamps:!0});userSchema.pre("save",(async function(next){if(!this.isModified("password"))return next();this.password=await bcrypt.hash(this.password,10),next()})),userSchema.methods.isPasswordCorrect=async function(password){return await bcrypt.compare(password,this.password)},userSchema.methods.generateAccessToken=async function(){return jwt.sign({_id:this._id,email:this.email,username:this.username,fullname:this.fullname,avatar:this.avatar,coverimage:this.coverimage,watchhistory:this.watchhistory},process.env.ACCESS_TOKEN_SECRET,{expiresIn:process.env.ACCESS_TOKEN_EXPIRY})},userSchema.methods.generateRefreshToken=async function(){return jwt.sign({_id:this._id},process.env.REFRESH_TOKEN_SECRET,{expiresIn:process.env.REFRESH_TOKEN_EXPIRY})};export const User=mongoose.model("User",userSchema);